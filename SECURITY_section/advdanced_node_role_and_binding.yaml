# michelle's responsibilities are growing and now she will be responsible for storage as well. Create the required ClusterRoles and ClusterRoleBindings to allow her access to Storage.
# Get the API groups and resource names from command kubectl api-resources. Use the given spec:

# ClusterRole: storage-admin
# Resource: persistentvolumes
# Resource: storageclasses
# ClusterRoleBinding: michelle-storage-admin
# ClusterRoleBinding Subject: michelle
# ClusterRoleBinding Role: storage-admin

# Commands:
# kubectl api-resources
# kubectl create clusterrole storage-admin --resource=persistentvolumes,storageclasses --verb=list,create,get,watch
# kubectl create clusterrolebinding michelle-storage-admin --user=michelle --clusterrole=storage-admin

---
    kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: storage-admin
    rules:
    - apiGroups: [""]
      resources: ["persistentvolumes"]
      verbs: ["get", "watch", "list", "create", "delete"]
    - apiGroups: ["storage.k8s.io"]
      resources: ["storageclasses"]
      verbs: ["get", "watch", "list", "create", "delete"]
    
    ---
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: michelle-storage-admin
    subjects:
    - kind: User
      name: michelle
      apiGroup: rbac.authorization.k8s.io
    roleRef:
      kind: ClusterRole
      name: storage-admin
      apiGroup: rbac.authorization.k8s.io